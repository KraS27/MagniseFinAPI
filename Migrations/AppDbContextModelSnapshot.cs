// <auto-generated />
using MagniseFinAPI.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagniseFinAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.6.24327.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagniseFinAPI.Models.Mapping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DefaultOrderSize")
                        .HasColumnType("int")
                        .HasColumnName("defaulrOrderSize");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("exchange");

                    b.Property<string>("MarketAssetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("symbol");

                    b.HasKey("Id");

                    b.HasIndex("MarketAssetId");

                    b.ToTable("mappings", (string)null);
                });

            modelBuilder.Entity("MagniseFinAPI.Models.MarketAsset", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descriptions");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("exchange");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kind");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("symbol");

                    b.Property<decimal>("TickSize")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tick_size");

                    b.HasKey("Id");

                    b.ToTable("market_assets", (string)null);
                });

            modelBuilder.Entity("MagniseFinAPI.Models.Mapping", b =>
                {
                    b.HasOne("MagniseFinAPI.Models.MarketAsset", "MarketAsset")
                        .WithMany("Mappings")
                        .HasForeignKey("MarketAssetId");

                    b.Navigation("MarketAsset");
                });

            modelBuilder.Entity("MagniseFinAPI.Models.MarketAsset", b =>
                {
                    b.Navigation("Mappings");
                });
#pragma warning restore 612, 618
        }
    }
}
